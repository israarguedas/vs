# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- dev

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'MibLibraryApp/MIBServiceFunctionApp.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
stages:
- stage: Build
  displayName: Build solution
  jobs:  
  - job: Build
    displayName: Build and publish solution

    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        msbuildArchitecture: 'x64'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
      condition: succeededOrFailed() 

- stage: DeployDev
  dependsOn: build
  displayName: 'Deploy To Dev'
  jobs:
    - job: Deploy
      displayName: Deploy to Develop 
      steps:      
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'specific'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: AzureRmWebAppDeployment@4
            displayName: Azure Deploy - Dev
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'ChangeGearProd -Pay-As-You-Go'
              appType: 'webApp'
              WebAppName: 'mibfuncapptest'
              packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
- stage: DeployProduction
  displayName: Deploy to Production
  dependsOn: DeployDev
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy to Production
    environment: prod
    strategy:
      runOnce:
        deploy:                
          steps:   
          - task: DownloadBuildArtifacts@1
            inputs:
                buildType: 'current'
                downloadType: 'specific'
                downloadPath: '$(System.ArtifactsDirectory)'
          - task: AzureRmWebAppDeployment@4
            displayName: Azure App Service Deploy - Production
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'ChangeGearProd -Pay-As-You-Go'
              appType: 'functionApp'
              WebAppName: 'mibfuncappprod'
              packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
